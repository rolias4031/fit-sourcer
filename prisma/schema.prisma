// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// id = Clerk id
// User 1-1 relations: LowerBody, UpperBody
// User n-n relations: LowerBodyGarments, UpperBodyGarments
model User {
  id            String         @id @default(cuid())
  email         String         @unique
  lowerBody     LowerBody?
  upperBody     UpperBody?
  garments      Garment[]
  role          Role           @default(user)
  vendorProfile VendorProfile?
  updatedAt     DateTime       @updatedAt
}

model VendorProfile {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @unique
  name        String    @unique
  status      Status    @default(pending)
  garments    Garment[]
  description String
  updatedAt   DateTime  @updatedAt
}

model LowerBody {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  waist     Decimal  @default(0)
  hip       Decimal  @default(0)
  seat      Decimal  @default(0)
  thigh     Decimal  @default(0)
  calf      Decimal  @default(0)
  inseam    Decimal  @default(0)
  outseam   Decimal  @default(0)
  updatedAt DateTime @updatedAt
}

model UpperBody {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  neck      Decimal  @default(0)
  shoulder  Decimal  @default(0)
  chest     Decimal  @default(0)
  stomach   Decimal  @default(0)
  bicep     Decimal  @default(0)
  forearm   Decimal  @default(0)
  arm       Decimal  @default(0)
  torso     Decimal  @default(0)
  updatedAt DateTime @updatedAt
}

// id = Clerk id
// Vendor 1-1 relations: None
// Vendor 1-n relations: LowerBodyGarments, UpperBodyGarments

// LowerBodyGarment 1-1 relations: Vendor
// LowerBodyGarment n-n relations: User
model Garment {
  id                           String                        @id @default(cuid())
  vendor                       VendorProfile                 @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  vendorId                     String
  users                        User[]
  name                         String                        @unique
  description                  String                        @db.Text()
  modelNumber                  String
  images                       GarmentImage[]
  garmentType                  GarmentType
  sex                          GarmentSex                    @default(unisex)
  updatedAt                    DateTime                      @updatedAt
  lowerBodyGarmentMeasurements LowerBodyGarmentMeasurements?
}

model LowerBodyGarmentMeasurements {
  id         String  @id @default(cuid())
  garment    Garment @relation(fields: [garmentId], references: [id], onDelete: Cascade)
  garmentId  String  @unique
  waist      Decimal @default(0)
  hip        Decimal @default(0)
  seat       Decimal @default(0)
  thigh      Decimal @default(0)
  calf       Decimal @default(0)
  inseam     Decimal @default(0)
  outseam    Decimal @default(0)
  legOpening Decimal @default(0)
}

model GarmentImage {
  id        String  @id @default(cuid())
  garment   Garment @relation(fields: [garmentId], references: [id], onDelete: Cascade)
  garmentId String
  url       String  @db.Text()
}

enum GarmentSex {
  men
  women
  unisex
}

enum GarmentType {
  pant
  short
}

enum Role {
  user
  vendor
  admin
}

enum Status {
  approved
  pending
}
