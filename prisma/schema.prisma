// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// id = Clerk id
// User 1-1 relations: LowerBody, UpperBody
// User n-n relations: LowerBodyGarments, UpperBodyGarments
model User {
  id                String             @id @default(cuid())
  email             String             @unique
  lowerBody         LowerBody?
  upperBody         UpperBody?
  lowerBodyGarments LowerBodyGarment[]
  role              Role               @default(USER)
  vendorProfile     VendorProfile?
  updatedAt         DateTime           @updatedAt
}

model VendorProfile {
  id                String             @id @default(cuid())
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String             @unique
  name              String             @unique
  status            Status             @default(PENDING)
  LowerBodyGarments LowerBodyGarment[]
  description       String
  updatedAt         DateTime           @updatedAt
}

model LowerBody {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  waist     Decimal  @default(0)
  hip       Decimal  @default(0)
  seat      Decimal  @default(0)
  thigh     Decimal  @default(0)
  calf      Decimal  @default(0)
  inseam    Decimal  @default(0)
  outseam   Decimal  @default(0)
  updatedAt DateTime @updatedAt
}

model UpperBody {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  neck      Decimal  @default(0)
  shoulder  Decimal  @default(0)
  chest     Decimal  @default(0)
  stomach   Decimal  @default(0)
  bicep     Decimal  @default(0)
  forearm   Decimal  @default(0)
  arm       Decimal  @default(0)
  torso     Decimal  @default(0)
  updatedAt DateTime @updatedAt
}

// id = Clerk id
// Vendor 1-1 relations: None
// Vendor 1-n relations: LowerBodyGarments, UpperBodyGarments

// LowerBodyGarment 1-1 relations: Vendor
// LowerBodyGarment n-n relations: User
model LowerBodyGarment {
  id          String        @id @default(cuid())
  vendor      VendorProfile @relation(fields: [vendorId], references: [id], onDelete: Cascade)
  vendorId    String        @unique
  users       User[]
  name        String
  description String
  type        String
  waist       Decimal       @default(0)
  hip         Decimal       @default(0)
  seat        Decimal       @default(0)
  thigh       Decimal       @default(0)
  calf        Decimal       @default(0)
  inseam      Decimal       @default(0)
  outseam     Decimal       @default(0)
  updatedAt   DateTime      @updatedAt
}

enum Role {
  USER
  VENDOR
  ADMIN
}

enum Status {
  APPROVED
  PENDING
}
